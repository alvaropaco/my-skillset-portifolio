{
  "name": "long_list_word_filter_api",
  "version": "1.0.0",
  "description": "For this challenge, you'll be implementing a simple server application that offers basic word completion. The server should offer one route, GET /, which can accept a query string stem that enables the client to specify the prefix of the words they'd like to retrieve. For example, given the following miniature word list: ```text  apple apples applesauce appetite ``` A query of \"apples\" should return only [\"apples\", \"applesauce\"]. A query of \"\" or \"a\", \"ap\" or \"app\" should return all words, since \"\" and the other substrings are a prefix to all words in the word list. Likewise, if no query is provided, return the entire word list. A query like \"pple\" would return nothing, because it's not a prefix of any words in the list. The list of words that you'll be filtering for the challenge itself will be much larger (466,000 words), can be considered static (that is, its contents are never expected to change as far as your app's logic is concerned) and should be obtained from the following URL: https://raw.githubusercontent.com/qualified/challenge-data/master/words_alpha.txt. Your code should make a request using the axios library to retrieve the text file contents. The file is ordered alphabetically, contains one word per line and consists entirely of lowercase letters separated by newlines.",
  "main": "app.js",
  "scripts": {
    "test": "mocha app.test.js"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "axios": "^1.6.0",
    "express": "^4.18.2"
  },
  "devDependencies": {
    "chai": "^4.3.10",
    "chai-http": "^4.4.0",
    "mocha": "^10.2.0"
  }
}
